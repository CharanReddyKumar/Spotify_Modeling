{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "isInteractiveWindowMessageCell": true
   },
   "source": [
    "Connected to raster_os (Python 3.10.10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'selected_genres' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[2], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m selected_genres\n",
      "\u001b[0;31mNameError\u001b[0m: name 'selected_genres' is not defined"
     ]
    }
   ],
   "source": [
    "selected_genres"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import \n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn import preprocessing\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from scipy.stats import skew"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "df =pd.read_csv('dataset.csv')\n",
    "df.head(5) #Read Data first 5 rows\n",
    "#Check for null values\n",
    "df.isnull().sum()\n",
    "#Remove NA values\n",
    "df = df.dropna()\n",
    "df.isnull().sum()\n",
    "df = df.drop(\"Unnamed: 0\", axis=1) #remove the unnamed column\n",
    "#checking for duplicates\n",
    "df.duplicated().sum()\n",
    "#removing duplicates\n",
    "df = df.drop_duplicates() #remove all duplicates\n",
    "df.duplicated().sum()\n",
    "df_genres = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'genres_1000' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[5], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[39m#%%\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m df_selected \u001b[39m=\u001b[39m df_genres[df_genres[\u001b[39m'\u001b[39m\u001b[39mtrack_genre\u001b[39m\u001b[39m'\u001b[39m]\u001b[39m.\u001b[39misin(genres_1000)]\n\u001b[1;32m      4\u001b[0m genres_list \u001b[39m=\u001b[39m [\u001b[39m'\u001b[39m\u001b[39mdisco\u001b[39m\u001b[39m'\u001b[39m, \u001b[39m'\u001b[39m\u001b[39melectronic\u001b[39m\u001b[39m'\u001b[39m, \u001b[39m'\u001b[39m\u001b[39mindustrial\u001b[39m\u001b[39m'\u001b[39m, \u001b[39m'\u001b[39m\u001b[39mtechno\u001b[39m\u001b[39m'\u001b[39m, \u001b[39m'\u001b[39m\u001b[39msynth-pop\u001b[39m\u001b[39m'\u001b[39m, \u001b[39m'\u001b[39m\u001b[39mfunk\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[1;32m      5\u001b[0m selected_genres \u001b[39m=\u001b[39m df_selected[df_selected[\u001b[39m'\u001b[39m\u001b[39mtrack_genre\u001b[39m\u001b[39m'\u001b[39m]\u001b[39m.\u001b[39misin(genres_list)]\n",
      "\u001b[0;31mNameError\u001b[0m: name 'genres_1000' is not defined"
     ]
    }
   ],
   "source": [
    "df_selected = df_genres[df_genres['track_genre'].isin(genres_1000)]\n",
    "\n",
    "genres_list = ['disco', 'electronic', 'industrial', 'techno', 'synth-pop', 'funk']\n",
    "selected_genres = df_selected[df_selected['track_genre'].isin(genres_list)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_genres.head()\n",
    "#check variable types prior to encoding, as we need to know\n",
    "# the genre label to select the desired ones for analysis \n",
    "data_types = df_genres.dtypes\n",
    "#track_genre is a string with several categories, lets examine further \n",
    "genre_counts = df_genres['track_genre'].value_counts()\n",
    "# Count the number of genres with at least 1000 rows\n",
    "num_genres_with_1000_rows = (genre_counts >= 1000).sum()\n",
    "#33 genres have 1000+  records, lets see what those are: \n",
    "# Filter genres with at least 1000 rows\n",
    "genres_1000 = genre_counts[genre_counts >= 1000].index\n",
    "\n",
    "\n",
    "df_selected = df_genres[df_genres['track_genre'].isin(genres_1000)]\n",
    "\n",
    "genres_list = ['disco', 'electronic', 'industrial', 'techno', 'synth-pop', 'funk']\n",
    "selected_genres = df_selected[df_selected['track_genre'].isin(genres_list)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "With n_samples=0, test_size=0.2 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters.",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[7], line 28\u001b[0m\n\u001b[1;32m     25\u001b[0m y \u001b[39m=\u001b[39m music_data[\u001b[39m'\u001b[39m\u001b[39mtrack_genre\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[1;32m     27\u001b[0m \u001b[39m# Split the data into training and testing sets\u001b[39;00m\n\u001b[0;32m---> 28\u001b[0m X_train, X_test, y_train, y_test \u001b[39m=\u001b[39m train_test_split(X, y, test_size\u001b[39m=\u001b[39;49m\u001b[39m0.2\u001b[39;49m, random_state\u001b[39m=\u001b[39;49m\u001b[39m42\u001b[39;49m)\n\u001b[1;32m     30\u001b[0m \u001b[39m# Decision Tree Classifier\u001b[39;00m\n\u001b[1;32m     31\u001b[0m dt_classifier \u001b[39m=\u001b[39m DecisionTreeClassifier()\n",
      "File \u001b[0;32m~/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:214\u001b[0m, in \u001b[0;36mvalidate_params.<locals>.decorator.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=207'>208</a>\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=208'>209</a>\u001b[0m     \u001b[39mwith\u001b[39;00m config_context(\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=209'>210</a>\u001b[0m         skip_parameter_validation\u001b[39m=\u001b[39m(\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=210'>211</a>\u001b[0m             prefer_skip_nested_validation \u001b[39mor\u001b[39;00m global_skip_validation\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=211'>212</a>\u001b[0m         )\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=212'>213</a>\u001b[0m     ):\n\u001b[0;32m--> <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=213'>214</a>\u001b[0m         \u001b[39mreturn\u001b[39;00m func(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=214'>215</a>\u001b[0m \u001b[39mexcept\u001b[39;00m InvalidParameterError \u001b[39mas\u001b[39;00m e:\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=215'>216</a>\u001b[0m     \u001b[39m# When the function is just a wrapper around an estimator, we allow\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=216'>217</a>\u001b[0m     \u001b[39m# the function to delegate validation to the estimator, but we replace\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=217'>218</a>\u001b[0m     \u001b[39m# the name of the estimator by the name of the function in the error\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=218'>219</a>\u001b[0m     \u001b[39m# message to avoid confusion.\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=219'>220</a>\u001b[0m     msg \u001b[39m=\u001b[39m re\u001b[39m.\u001b[39msub(\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=220'>221</a>\u001b[0m         \u001b[39mr\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mparameter of \u001b[39m\u001b[39m\\\u001b[39m\u001b[39mw+ must be\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=221'>222</a>\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mparameter of \u001b[39m\u001b[39m{\u001b[39;00mfunc\u001b[39m.\u001b[39m\u001b[39m__qualname__\u001b[39m\u001b[39m}\u001b[39;00m\u001b[39m must be\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=222'>223</a>\u001b[0m         \u001b[39mstr\u001b[39m(e),\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=223'>224</a>\u001b[0m     )\n",
      "File \u001b[0;32m~/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py:2649\u001b[0m, in \u001b[0;36mtrain_test_split\u001b[0;34m(test_size, train_size, random_state, shuffle, stratify, *arrays)\u001b[0m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2645'>2646</a>\u001b[0m arrays \u001b[39m=\u001b[39m indexable(\u001b[39m*\u001b[39marrays)\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2647'>2648</a>\u001b[0m n_samples \u001b[39m=\u001b[39m _num_samples(arrays[\u001b[39m0\u001b[39m])\n\u001b[0;32m-> <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2648'>2649</a>\u001b[0m n_train, n_test \u001b[39m=\u001b[39m _validate_shuffle_split(\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2649'>2650</a>\u001b[0m     n_samples, test_size, train_size, default_test_size\u001b[39m=\u001b[39;49m\u001b[39m0.25\u001b[39;49m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2650'>2651</a>\u001b[0m )\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2652'>2653</a>\u001b[0m \u001b[39mif\u001b[39;00m shuffle \u001b[39mis\u001b[39;00m \u001b[39mFalse\u001b[39;00m:\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2653'>2654</a>\u001b[0m     \u001b[39mif\u001b[39;00m stratify \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n",
      "File \u001b[0;32m~/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py:2305\u001b[0m, in \u001b[0;36m_validate_shuffle_split\u001b[0;34m(n_samples, test_size, train_size, default_test_size)\u001b[0m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2301'>2302</a>\u001b[0m n_train, n_test \u001b[39m=\u001b[39m \u001b[39mint\u001b[39m(n_train), \u001b[39mint\u001b[39m(n_test)\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2303'>2304</a>\u001b[0m \u001b[39mif\u001b[39;00m n_train \u001b[39m==\u001b[39m \u001b[39m0\u001b[39m:\n\u001b[0;32m-> <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2304'>2305</a>\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2305'>2306</a>\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mWith n_samples=\u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m, test_size=\u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m and train_size=\u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m, the \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2306'>2307</a>\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mresulting train set will be empty. Adjust any of the \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2307'>2308</a>\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39maforementioned parameters.\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(n_samples, test_size, train_size)\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2308'>2309</a>\u001b[0m     )\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2310'>2311</a>\u001b[0m \u001b[39mreturn\u001b[39;00m n_train, n_test\n",
      "\u001b[0;31mValueError\u001b[0m: With n_samples=0, test_size=0.2 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters."
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "# Assuming df_genres is your DataFrame containing the data\n",
    "# Replace 'target_genre' with the actual column name for your genre labels\n",
    "# Replace 'features_set1' with your actual set of features\n",
    "\n",
    "# Clean Data\n",
    "music_data = df_genres\n",
    "music_data.dropna(inplace=True)\n",
    "music_data.drop_duplicates(inplace=True)\n",
    "\n",
    "\n",
    "features_set1 = ['popularity', 'acousticness', 'instrumentalness']\n",
    "\n",
    "music_data = music_data[music_data['track_genre'].isin(selected_genres)]\n",
    "\n",
    "X = music_data[features_set1]\n",
    "y = music_data['track_genre']\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Decision Tree Classifier\n",
    "dt_classifier = DecisionTreeClassifier()\n",
    "dt_classifier.fit(X_train, y_train)\n",
    "dt_predictions = dt_classifier.predict(X_test)\n",
    "dt_accuracy = accuracy_score(y_test, dt_predictions)\n",
    "print(f'Decision Tree Classifier Accuracy: {dt_accuracy:.4f}')\n",
    "\n",
    "# Random Forest Classifier\n",
    "rf_classifier = RandomForestClassifier()\n",
    "rf_classifier.fit(X_train, y_train)\n",
    "rf_predictions = rf_classifier.predict(X_test)\n",
    "rf_accuracy = accuracy_score(y_test, rf_predictions)\n",
    "print(f'Random Forest Classifier Accuracy: {rf_accuracy:.4f}')\n",
    "\n",
    "# Support Vector Classifier (SVC)\n",
    "svc_classifier = SVC()\n",
    "svc_classifier.fit(X_train, y_train)\n",
    "svc_predictions = svc_classifier.predict(X_test)\n",
    "svc_accuracy = accuracy_score(y_test, svc_predictions)\n",
    "print(f'Support Vector Classifier Accuracy: {svc_accuracy:.4f}')\n",
    "\n",
    "# K-Nearest Neighbors Classifier (KNN)\n",
    "knn_classifier = KNeighborsClassifier()\n",
    "knn_classifier.fit(X_train, y_train)\n",
    "knn_predictions = knn_classifier.predict(X_test)\n",
    "knn_accuracy = accuracy_score(y_test, knn_predictions)\n",
    "print(f'K-Nearest Neighbors Classifier Accuracy: {knn_accuracy:.4f}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import \n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn import preprocessing\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from scipy.stats import skew\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "df =pd.read_csv('dataset.csv')\n",
    "df.head(5) #Read Data first 5 rows\n",
    "#Check for null values\n",
    "df.isnull().sum()\n",
    "#Remove NA values\n",
    "df = df.dropna()\n",
    "df.isnull().sum()\n",
    "df = df.drop(\"Unnamed: 0\", axis=1) #remove the unnamed column\n",
    "#checking for duplicates\n",
    "df.duplicated().sum()\n",
    "#removing duplicates\n",
    "df = df.drop_duplicates() #remove all duplicates\n",
    "df.duplicated().sum()\n",
    "df_genres = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-10-8de441378dde>:12: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  music_data.dropna(inplace=True)\n",
      "<ipython-input-10-8de441378dde>:13: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  music_data.drop_duplicates(inplace=True)\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "With n_samples=0, test_size=0.2 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters.",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[10], line 24\u001b[0m\n\u001b[1;32m     21\u001b[0m y \u001b[39m=\u001b[39m music_data[\u001b[39m'\u001b[39m\u001b[39mtrack_genre\u001b[39m\u001b[39m'\u001b[39m]\n\u001b[1;32m     23\u001b[0m \u001b[39m# Split the data into training and testing sets\u001b[39;00m\n\u001b[0;32m---> 24\u001b[0m X_train, X_test, y_train, y_test \u001b[39m=\u001b[39m train_test_split(X, y, test_size\u001b[39m=\u001b[39;49m\u001b[39m0.2\u001b[39;49m, random_state\u001b[39m=\u001b[39;49m\u001b[39m42\u001b[39;49m)\n\u001b[1;32m     26\u001b[0m \u001b[39m# Decision Tree Classifier\u001b[39;00m\n\u001b[1;32m     27\u001b[0m dt_classifier \u001b[39m=\u001b[39m DecisionTreeClassifier()\n",
      "File \u001b[0;32m~/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:214\u001b[0m, in \u001b[0;36mvalidate_params.<locals>.decorator.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=207'>208</a>\u001b[0m \u001b[39mtry\u001b[39;00m:\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=208'>209</a>\u001b[0m     \u001b[39mwith\u001b[39;00m config_context(\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=209'>210</a>\u001b[0m         skip_parameter_validation\u001b[39m=\u001b[39m(\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=210'>211</a>\u001b[0m             prefer_skip_nested_validation \u001b[39mor\u001b[39;00m global_skip_validation\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=211'>212</a>\u001b[0m         )\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=212'>213</a>\u001b[0m     ):\n\u001b[0;32m--> <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=213'>214</a>\u001b[0m         \u001b[39mreturn\u001b[39;00m func(\u001b[39m*\u001b[39;49margs, \u001b[39m*\u001b[39;49m\u001b[39m*\u001b[39;49mkwargs)\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=214'>215</a>\u001b[0m \u001b[39mexcept\u001b[39;00m InvalidParameterError \u001b[39mas\u001b[39;00m e:\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=215'>216</a>\u001b[0m     \u001b[39m# When the function is just a wrapper around an estimator, we allow\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=216'>217</a>\u001b[0m     \u001b[39m# the function to delegate validation to the estimator, but we replace\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=217'>218</a>\u001b[0m     \u001b[39m# the name of the estimator by the name of the function in the error\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=218'>219</a>\u001b[0m     \u001b[39m# message to avoid confusion.\u001b[39;00m\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=219'>220</a>\u001b[0m     msg \u001b[39m=\u001b[39m re\u001b[39m.\u001b[39msub(\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=220'>221</a>\u001b[0m         \u001b[39mr\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mparameter of \u001b[39m\u001b[39m\\\u001b[39m\u001b[39mw+ must be\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=221'>222</a>\u001b[0m         \u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mparameter of \u001b[39m\u001b[39m{\u001b[39;00mfunc\u001b[39m.\u001b[39m\u001b[39m__qualname__\u001b[39m\u001b[39m}\u001b[39;00m\u001b[39m must be\u001b[39m\u001b[39m\"\u001b[39m,\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=222'>223</a>\u001b[0m         \u001b[39mstr\u001b[39m(e),\n\u001b[1;32m    <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/utils/_param_validation.py?line=223'>224</a>\u001b[0m     )\n",
      "File \u001b[0;32m~/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py:2649\u001b[0m, in \u001b[0;36mtrain_test_split\u001b[0;34m(test_size, train_size, random_state, shuffle, stratify, *arrays)\u001b[0m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2645'>2646</a>\u001b[0m arrays \u001b[39m=\u001b[39m indexable(\u001b[39m*\u001b[39marrays)\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2647'>2648</a>\u001b[0m n_samples \u001b[39m=\u001b[39m _num_samples(arrays[\u001b[39m0\u001b[39m])\n\u001b[0;32m-> <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2648'>2649</a>\u001b[0m n_train, n_test \u001b[39m=\u001b[39m _validate_shuffle_split(\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2649'>2650</a>\u001b[0m     n_samples, test_size, train_size, default_test_size\u001b[39m=\u001b[39;49m\u001b[39m0.25\u001b[39;49m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2650'>2651</a>\u001b[0m )\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2652'>2653</a>\u001b[0m \u001b[39mif\u001b[39;00m shuffle \u001b[39mis\u001b[39;00m \u001b[39mFalse\u001b[39;00m:\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2653'>2654</a>\u001b[0m     \u001b[39mif\u001b[39;00m stratify \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n",
      "File \u001b[0;32m~/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py:2305\u001b[0m, in \u001b[0;36m_validate_shuffle_split\u001b[0;34m(n_samples, test_size, train_size, default_test_size)\u001b[0m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2301'>2302</a>\u001b[0m n_train, n_test \u001b[39m=\u001b[39m \u001b[39mint\u001b[39m(n_train), \u001b[39mint\u001b[39m(n_test)\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2303'>2304</a>\u001b[0m \u001b[39mif\u001b[39;00m n_train \u001b[39m==\u001b[39m \u001b[39m0\u001b[39m:\n\u001b[0;32m-> <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2304'>2305</a>\u001b[0m     \u001b[39mraise\u001b[39;00m \u001b[39mValueError\u001b[39;00m(\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2305'>2306</a>\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mWith n_samples=\u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m, test_size=\u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m and train_size=\u001b[39m\u001b[39m{}\u001b[39;00m\u001b[39m, the \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2306'>2307</a>\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39mresulting train set will be empty. Adjust any of the \u001b[39m\u001b[39m\"\u001b[39m\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2307'>2308</a>\u001b[0m         \u001b[39m\"\u001b[39m\u001b[39maforementioned parameters.\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m.\u001b[39mformat(n_samples, test_size, train_size)\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2308'>2309</a>\u001b[0m     )\n\u001b[1;32m   <a href='file:///Users/paulinemnev/opt/anaconda3/envs/raster_os/lib/python3.10/site-packages/sklearn/model_selection/_split.py?line=2310'>2311</a>\u001b[0m \u001b[39mreturn\u001b[39;00m n_train, n_test\n",
      "\u001b[0;31mValueError\u001b[0m: With n_samples=0, test_size=0.2 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters."
     ]
    }
   ],
   "source": [
    "df_genres.head()\n",
    "genre_counts = df_genres['track_genre'].value_counts()\n",
    "num_genres_with_1000_rows = (genre_counts >= 1000).sum()\n",
    "genres_1000 = genre_counts[genre_counts >= 1000].index\n",
    "df_selected = df_genres[df_genres['track_genre'].isin(genres_1000)]\n",
    "\n",
    "genres_list = ['disco', 'electronic', 'industrial', 'techno', 'synth-pop', 'funk']\n",
    "selected_genres = df_selected[df_selected['track_genre'].isin(genres_list)]\n",
    "\n",
    "music_data = selected_genres\n",
    "music_data.dropna(inplace=True)\n",
    "music_data.drop_duplicates(inplace=True)\n",
    "\n",
    "\n",
    "features_set1 = ['popularity', 'acousticness', 'instrumentalness']\n",
    "\n",
    "music_data = music_data[music_data['track_genre'].isin(selected_genres)]\n",
    "\n",
    "X = music_data[features_set1]\n",
    "y = music_data['track_genre']\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Decision Tree Classifier\n",
    "dt_classifier = DecisionTreeClassifier()\n",
    "dt_classifier.fit(X_train, y_train)\n",
    "dt_predictions = dt_classifier.predict(X_test)\n",
    "dt_accuracy = accuracy_score(y_test, dt_predictions)\n",
    "print(f'Decision Tree Classifier Accuracy: {dt_accuracy:.4f}')\n",
    "\n",
    "# Random Forest Classifier\n",
    "rf_classifier = RandomForestClassifier()\n",
    "rf_classifier.fit(X_train, y_train)\n",
    "rf_predictions = rf_classifier.predict(X_test)\n",
    "rf_accuracy = accuracy_score(y_test, rf_predictions)\n",
    "print(f'Random Forest Classifier Accuracy: {rf_accuracy:.4f}')\n",
    "\n",
    "# Support Vector Classifier (SVC)\n",
    "svc_classifier = SVC()\n",
    "svc_classifier.fit(X_train, y_train)\n",
    "svc_predictions = svc_classifier.predict(X_test)\n",
    "svc_accuracy = accuracy_score(y_test, svc_predictions)\n",
    "print(f'Support Vector Classifier Accuracy: {svc_accuracy:.4f}')\n",
    "\n",
    "# K-Nearest Neighbors Classifier (KNN)\n",
    "knn_classifier = KNeighborsClassifier()\n",
    "knn_classifier.fit(X_train, y_train)\n",
    "knn_predictions = knn_classifier.predict(X_test)\n",
    "knn_accuracy = accuracy_score(y_test, knn_predictions)\n",
    "print(f'K-Nearest Neighbors Classifier Accuracy: {knn_accuracy:.4f}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>track_id</th>\n",
       "      <th>artists</th>\n",
       "      <th>album_name</th>\n",
       "      <th>track_name</th>\n",
       "      <th>popularity</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>explicit</th>\n",
       "      <th>danceability</th>\n",
       "      <th>energy</th>\n",
       "      <th>key</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>track_genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [track_id, artists, album_name, track_name, popularity, duration_ms, explicit, danceability, energy, key, loudness, mode, speechiness, acousticness, instrumentalness, liveness, valence, tempo, time_signature, track_genre]\n",
       "Index: []"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "music_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import \n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn import preprocessing\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from scipy.stats import skew\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "df =pd.read_csv('dataset.csv')\n",
    "df.head(5) #Read Data first 5 rows\n",
    "#Check for null values\n",
    "df.isnull().sum()\n",
    "#Remove NA values\n",
    "df = df.dropna()\n",
    "df.isnull().sum()\n",
    "df = df.drop(\"Unnamed: 0\", axis=1) #remove the unnamed column\n",
    "#checking for duplicates\n",
    "df.duplicated().sum()\n",
    "#removing duplicates\n",
    "df = df.drop_duplicates() #remove all duplicates\n",
    "df.duplicated().sum()\n",
    "df_genres = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>track_id</th>\n",
       "      <th>artists</th>\n",
       "      <th>album_name</th>\n",
       "      <th>track_name</th>\n",
       "      <th>popularity</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>explicit</th>\n",
       "      <th>danceability</th>\n",
       "      <th>energy</th>\n",
       "      <th>key</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>track_genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5SuOikwiRyPMVoIQDJUgSV</td>\n",
       "      <td>Gen Hoshino</td>\n",
       "      <td>Comedy</td>\n",
       "      <td>Comedy</td>\n",
       "      <td>73</td>\n",
       "      <td>230666</td>\n",
       "      <td>False</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.4610</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.746</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1430</td>\n",
       "      <td>0.0322</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.3580</td>\n",
       "      <td>0.7150</td>\n",
       "      <td>87.917</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4qPNDBW1i3p13qLCt0Ki3A</td>\n",
       "      <td>Ben Woodward</td>\n",
       "      <td>Ghost (Acoustic)</td>\n",
       "      <td>Ghost - Acoustic</td>\n",
       "      <td>55</td>\n",
       "      <td>149610</td>\n",
       "      <td>False</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.1660</td>\n",
       "      <td>1</td>\n",
       "      <td>-17.235</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0763</td>\n",
       "      <td>0.9240</td>\n",
       "      <td>0.000006</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.2670</td>\n",
       "      <td>77.489</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1iJBSr7s7jYXzM8EGcbK5b</td>\n",
       "      <td>Ingrid Michaelson;ZAYN</td>\n",
       "      <td>To Begin Again</td>\n",
       "      <td>To Begin Again</td>\n",
       "      <td>57</td>\n",
       "      <td>210826</td>\n",
       "      <td>False</td>\n",
       "      <td>0.438</td>\n",
       "      <td>0.3590</td>\n",
       "      <td>0</td>\n",
       "      <td>-9.734</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0557</td>\n",
       "      <td>0.2100</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1170</td>\n",
       "      <td>0.1200</td>\n",
       "      <td>76.332</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6lfxq3CG4xtTiEg7opyCyx</td>\n",
       "      <td>Kina Grannis</td>\n",
       "      <td>Crazy Rich Asians (Original Motion Picture Sou...</td>\n",
       "      <td>Can't Help Falling In Love</td>\n",
       "      <td>71</td>\n",
       "      <td>201933</td>\n",
       "      <td>False</td>\n",
       "      <td>0.266</td>\n",
       "      <td>0.0596</td>\n",
       "      <td>0</td>\n",
       "      <td>-18.515</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0363</td>\n",
       "      <td>0.9050</td>\n",
       "      <td>0.000071</td>\n",
       "      <td>0.1320</td>\n",
       "      <td>0.1430</td>\n",
       "      <td>181.740</td>\n",
       "      <td>3</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5vjLSffimiIP26QG5WcN2K</td>\n",
       "      <td>Chord Overstreet</td>\n",
       "      <td>Hold On</td>\n",
       "      <td>Hold On</td>\n",
       "      <td>82</td>\n",
       "      <td>198853</td>\n",
       "      <td>False</td>\n",
       "      <td>0.618</td>\n",
       "      <td>0.4430</td>\n",
       "      <td>2</td>\n",
       "      <td>-9.681</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0526</td>\n",
       "      <td>0.4690</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0829</td>\n",
       "      <td>0.1670</td>\n",
       "      <td>119.949</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113995</th>\n",
       "      <td>2C3TZjDRiAzdyViavDJ217</td>\n",
       "      <td>Rainy Lullaby</td>\n",
       "      <td>#mindfulness - Soft Rain for Mindful Meditatio...</td>\n",
       "      <td>Sleep My Little Boy</td>\n",
       "      <td>21</td>\n",
       "      <td>384999</td>\n",
       "      <td>False</td>\n",
       "      <td>0.172</td>\n",
       "      <td>0.2350</td>\n",
       "      <td>5</td>\n",
       "      <td>-16.393</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0422</td>\n",
       "      <td>0.6400</td>\n",
       "      <td>0.928000</td>\n",
       "      <td>0.0863</td>\n",
       "      <td>0.0339</td>\n",
       "      <td>125.995</td>\n",
       "      <td>5</td>\n",
       "      <td>world-music</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113996</th>\n",
       "      <td>1hIz5L4IB9hN3WRYPOCGPw</td>\n",
       "      <td>Rainy Lullaby</td>\n",
       "      <td>#mindfulness - Soft Rain for Mindful Meditatio...</td>\n",
       "      <td>Water Into Light</td>\n",
       "      <td>22</td>\n",
       "      <td>385000</td>\n",
       "      <td>False</td>\n",
       "      <td>0.174</td>\n",
       "      <td>0.1170</td>\n",
       "      <td>0</td>\n",
       "      <td>-18.318</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0401</td>\n",
       "      <td>0.9940</td>\n",
       "      <td>0.976000</td>\n",
       "      <td>0.1050</td>\n",
       "      <td>0.0350</td>\n",
       "      <td>85.239</td>\n",
       "      <td>4</td>\n",
       "      <td>world-music</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113997</th>\n",
       "      <td>6x8ZfSoqDjuNa5SVP5QjvX</td>\n",
       "      <td>Cesária Evora</td>\n",
       "      <td>Best Of</td>\n",
       "      <td>Miss Perfumado</td>\n",
       "      <td>22</td>\n",
       "      <td>271466</td>\n",
       "      <td>False</td>\n",
       "      <td>0.629</td>\n",
       "      <td>0.3290</td>\n",
       "      <td>0</td>\n",
       "      <td>-10.895</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0420</td>\n",
       "      <td>0.8670</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0839</td>\n",
       "      <td>0.7430</td>\n",
       "      <td>132.378</td>\n",
       "      <td>4</td>\n",
       "      <td>world-music</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113998</th>\n",
       "      <td>2e6sXL2bYv4bSz6VTdnfLs</td>\n",
       "      <td>Michael W. Smith</td>\n",
       "      <td>Change Your World</td>\n",
       "      <td>Friends</td>\n",
       "      <td>41</td>\n",
       "      <td>283893</td>\n",
       "      <td>False</td>\n",
       "      <td>0.587</td>\n",
       "      <td>0.5060</td>\n",
       "      <td>7</td>\n",
       "      <td>-10.889</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0297</td>\n",
       "      <td>0.3810</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2700</td>\n",
       "      <td>0.4130</td>\n",
       "      <td>135.960</td>\n",
       "      <td>4</td>\n",
       "      <td>world-music</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113999</th>\n",
       "      <td>2hETkH7cOfqmz3LqZDHZf5</td>\n",
       "      <td>Cesária Evora</td>\n",
       "      <td>Miss Perfumado</td>\n",
       "      <td>Barbincor</td>\n",
       "      <td>22</td>\n",
       "      <td>241826</td>\n",
       "      <td>False</td>\n",
       "      <td>0.526</td>\n",
       "      <td>0.4870</td>\n",
       "      <td>1</td>\n",
       "      <td>-10.204</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0725</td>\n",
       "      <td>0.6810</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0893</td>\n",
       "      <td>0.7080</td>\n",
       "      <td>79.198</td>\n",
       "      <td>4</td>\n",
       "      <td>world-music</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>113549 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      track_id                 artists  \\\n",
       "0       5SuOikwiRyPMVoIQDJUgSV             Gen Hoshino   \n",
       "1       4qPNDBW1i3p13qLCt0Ki3A            Ben Woodward   \n",
       "2       1iJBSr7s7jYXzM8EGcbK5b  Ingrid Michaelson;ZAYN   \n",
       "3       6lfxq3CG4xtTiEg7opyCyx            Kina Grannis   \n",
       "4       5vjLSffimiIP26QG5WcN2K        Chord Overstreet   \n",
       "...                        ...                     ...   \n",
       "113995  2C3TZjDRiAzdyViavDJ217           Rainy Lullaby   \n",
       "113996  1hIz5L4IB9hN3WRYPOCGPw           Rainy Lullaby   \n",
       "113997  6x8ZfSoqDjuNa5SVP5QjvX           Cesária Evora   \n",
       "113998  2e6sXL2bYv4bSz6VTdnfLs        Michael W. Smith   \n",
       "113999  2hETkH7cOfqmz3LqZDHZf5           Cesária Evora   \n",
       "\n",
       "                                               album_name  \\\n",
       "0                                                  Comedy   \n",
       "1                                        Ghost (Acoustic)   \n",
       "2                                          To Begin Again   \n",
       "3       Crazy Rich Asians (Original Motion Picture Sou...   \n",
       "4                                                 Hold On   \n",
       "...                                                   ...   \n",
       "113995  #mindfulness - Soft Rain for Mindful Meditatio...   \n",
       "113996  #mindfulness - Soft Rain for Mindful Meditatio...   \n",
       "113997                                            Best Of   \n",
       "113998                                  Change Your World   \n",
       "113999                                     Miss Perfumado   \n",
       "\n",
       "                        track_name  popularity  duration_ms  explicit  \\\n",
       "0                           Comedy          73       230666     False   \n",
       "1                 Ghost - Acoustic          55       149610     False   \n",
       "2                   To Begin Again          57       210826     False   \n",
       "3       Can't Help Falling In Love          71       201933     False   \n",
       "4                          Hold On          82       198853     False   \n",
       "...                            ...         ...          ...       ...   \n",
       "113995         Sleep My Little Boy          21       384999     False   \n",
       "113996            Water Into Light          22       385000     False   \n",
       "113997              Miss Perfumado          22       271466     False   \n",
       "113998                     Friends          41       283893     False   \n",
       "113999                   Barbincor          22       241826     False   \n",
       "\n",
       "        danceability  energy  key  loudness  mode  speechiness  acousticness  \\\n",
       "0              0.676  0.4610    1    -6.746     0       0.1430        0.0322   \n",
       "1              0.420  0.1660    1   -17.235     1       0.0763        0.9240   \n",
       "2              0.438  0.3590    0    -9.734     1       0.0557        0.2100   \n",
       "3              0.266  0.0596    0   -18.515     1       0.0363        0.9050   \n",
       "4              0.618  0.4430    2    -9.681     1       0.0526        0.4690   \n",
       "...              ...     ...  ...       ...   ...          ...           ...   \n",
       "113995         0.172  0.2350    5   -16.393     1       0.0422        0.6400   \n",
       "113996         0.174  0.1170    0   -18.318     0       0.0401        0.9940   \n",
       "113997         0.629  0.3290    0   -10.895     0       0.0420        0.8670   \n",
       "113998         0.587  0.5060    7   -10.889     1       0.0297        0.3810   \n",
       "113999         0.526  0.4870    1   -10.204     0       0.0725        0.6810   \n",
       "\n",
       "        instrumentalness  liveness  valence    tempo  time_signature  \\\n",
       "0               0.000001    0.3580   0.7150   87.917               4   \n",
       "1               0.000006    0.1010   0.2670   77.489               4   \n",
       "2               0.000000    0.1170   0.1200   76.332               4   \n",
       "3               0.000071    0.1320   0.1430  181.740               3   \n",
       "4               0.000000    0.0829   0.1670  119.949               4   \n",
       "...                  ...       ...      ...      ...             ...   \n",
       "113995          0.928000    0.0863   0.0339  125.995               5   \n",
       "113996          0.976000    0.1050   0.0350   85.239               4   \n",
       "113997          0.000000    0.0839   0.7430  132.378               4   \n",
       "113998          0.000000    0.2700   0.4130  135.960               4   \n",
       "113999          0.000000    0.0893   0.7080   79.198               4   \n",
       "\n",
       "        track_genre  \n",
       "0          acoustic  \n",
       "1          acoustic  \n",
       "2          acoustic  \n",
       "3          acoustic  \n",
       "4          acoustic  \n",
       "...             ...  \n",
       "113995  world-music  \n",
       "113996  world-music  \n",
       "113997  world-music  \n",
       "113998  world-music  \n",
       "113999  world-music  \n",
       "\n",
       "[113549 rows x 20 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_genres"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>track_id</th>\n",
       "      <th>artists</th>\n",
       "      <th>album_name</th>\n",
       "      <th>track_name</th>\n",
       "      <th>popularity</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>explicit</th>\n",
       "      <th>danceability</th>\n",
       "      <th>energy</th>\n",
       "      <th>key</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>track_genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5SuOikwiRyPMVoIQDJUgSV</td>\n",
       "      <td>Gen Hoshino</td>\n",
       "      <td>Comedy</td>\n",
       "      <td>Comedy</td>\n",
       "      <td>73</td>\n",
       "      <td>230666</td>\n",
       "      <td>False</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.4610</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.746</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1430</td>\n",
       "      <td>0.0322</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.3580</td>\n",
       "      <td>0.715</td>\n",
       "      <td>87.917</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4qPNDBW1i3p13qLCt0Ki3A</td>\n",
       "      <td>Ben Woodward</td>\n",
       "      <td>Ghost (Acoustic)</td>\n",
       "      <td>Ghost - Acoustic</td>\n",
       "      <td>55</td>\n",
       "      <td>149610</td>\n",
       "      <td>False</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.1660</td>\n",
       "      <td>1</td>\n",
       "      <td>-17.235</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0763</td>\n",
       "      <td>0.9240</td>\n",
       "      <td>0.000006</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.267</td>\n",
       "      <td>77.489</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1iJBSr7s7jYXzM8EGcbK5b</td>\n",
       "      <td>Ingrid Michaelson;ZAYN</td>\n",
       "      <td>To Begin Again</td>\n",
       "      <td>To Begin Again</td>\n",
       "      <td>57</td>\n",
       "      <td>210826</td>\n",
       "      <td>False</td>\n",
       "      <td>0.438</td>\n",
       "      <td>0.3590</td>\n",
       "      <td>0</td>\n",
       "      <td>-9.734</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0557</td>\n",
       "      <td>0.2100</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1170</td>\n",
       "      <td>0.120</td>\n",
       "      <td>76.332</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6lfxq3CG4xtTiEg7opyCyx</td>\n",
       "      <td>Kina Grannis</td>\n",
       "      <td>Crazy Rich Asians (Original Motion Picture Sou...</td>\n",
       "      <td>Can't Help Falling In Love</td>\n",
       "      <td>71</td>\n",
       "      <td>201933</td>\n",
       "      <td>False</td>\n",
       "      <td>0.266</td>\n",
       "      <td>0.0596</td>\n",
       "      <td>0</td>\n",
       "      <td>-18.515</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0363</td>\n",
       "      <td>0.9050</td>\n",
       "      <td>0.000071</td>\n",
       "      <td>0.1320</td>\n",
       "      <td>0.143</td>\n",
       "      <td>181.740</td>\n",
       "      <td>3</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5vjLSffimiIP26QG5WcN2K</td>\n",
       "      <td>Chord Overstreet</td>\n",
       "      <td>Hold On</td>\n",
       "      <td>Hold On</td>\n",
       "      <td>82</td>\n",
       "      <td>198853</td>\n",
       "      <td>False</td>\n",
       "      <td>0.618</td>\n",
       "      <td>0.4430</td>\n",
       "      <td>2</td>\n",
       "      <td>-9.681</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0526</td>\n",
       "      <td>0.4690</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0829</td>\n",
       "      <td>0.167</td>\n",
       "      <td>119.949</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 track_id                 artists  \\\n",
       "0  5SuOikwiRyPMVoIQDJUgSV             Gen Hoshino   \n",
       "1  4qPNDBW1i3p13qLCt0Ki3A            Ben Woodward   \n",
       "2  1iJBSr7s7jYXzM8EGcbK5b  Ingrid Michaelson;ZAYN   \n",
       "3  6lfxq3CG4xtTiEg7opyCyx            Kina Grannis   \n",
       "4  5vjLSffimiIP26QG5WcN2K        Chord Overstreet   \n",
       "\n",
       "                                          album_name  \\\n",
       "0                                             Comedy   \n",
       "1                                   Ghost (Acoustic)   \n",
       "2                                     To Begin Again   \n",
       "3  Crazy Rich Asians (Original Motion Picture Sou...   \n",
       "4                                            Hold On   \n",
       "\n",
       "                   track_name  popularity  duration_ms  explicit  \\\n",
       "0                      Comedy          73       230666     False   \n",
       "1            Ghost - Acoustic          55       149610     False   \n",
       "2              To Begin Again          57       210826     False   \n",
       "3  Can't Help Falling In Love          71       201933     False   \n",
       "4                     Hold On          82       198853     False   \n",
       "\n",
       "   danceability  energy  key  loudness  mode  speechiness  acousticness  \\\n",
       "0         0.676  0.4610    1    -6.746     0       0.1430        0.0322   \n",
       "1         0.420  0.1660    1   -17.235     1       0.0763        0.9240   \n",
       "2         0.438  0.3590    0    -9.734     1       0.0557        0.2100   \n",
       "3         0.266  0.0596    0   -18.515     1       0.0363        0.9050   \n",
       "4         0.618  0.4430    2    -9.681     1       0.0526        0.4690   \n",
       "\n",
       "   instrumentalness  liveness  valence    tempo  time_signature track_genre  \n",
       "0          0.000001    0.3580    0.715   87.917               4    acoustic  \n",
       "1          0.000006    0.1010    0.267   77.489               4    acoustic  \n",
       "2          0.000000    0.1170    0.120   76.332               4    acoustic  \n",
       "3          0.000071    0.1320    0.143  181.740               3    acoustic  \n",
       "4          0.000000    0.0829    0.167  119.949               4    acoustic  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_genres.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "genre_counts = df_genres['track_genre'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "track_genre\n",
       "acoustic       1000\n",
       "emo            1000\n",
       "rock-n-roll    1000\n",
       "reggaeton      1000\n",
       "disco          1000\n",
       "               ... \n",
       "honky-tonk      981\n",
       "dance           965\n",
       "german          963\n",
       "classical       933\n",
       "romance         904\n",
       "Name: count, Length: 114, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genre_counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "num_genres_with_1000_rows = (genre_counts >= 1000).sum()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "genres_1000 = genre_counts[genre_counts >= 1000].index\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['acoustic', 'emo', 'rock-n-roll', 'reggaeton', 'disco', 'r-n-b',\n",
       "       'punk-rock', 'pagode', 'electronic', 'mpb', 'country', 'metalcore',\n",
       "       'mandopop', 'funk', 'garage', 'j-rock', 'industrial', 'indie-pop',\n",
       "       'rock', 'reggae', 'techno', 'songwriter', 'samba', 'sertanejo', 'tango',\n",
       "       'synth-pop', 'singer-songwriter', 'swedish', 'ska', 'spanish', 'sad',\n",
       "       'sleep', 'british'],\n",
       "      dtype='object', name='track_genre')"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genres_1000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>track_id</th>\n",
       "      <th>artists</th>\n",
       "      <th>album_name</th>\n",
       "      <th>track_name</th>\n",
       "      <th>popularity</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>explicit</th>\n",
       "      <th>danceability</th>\n",
       "      <th>energy</th>\n",
       "      <th>key</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>track_genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5SuOikwiRyPMVoIQDJUgSV</td>\n",
       "      <td>Gen Hoshino</td>\n",
       "      <td>Comedy</td>\n",
       "      <td>Comedy</td>\n",
       "      <td>73</td>\n",
       "      <td>230666</td>\n",
       "      <td>False</td>\n",
       "      <td>0.676</td>\n",
       "      <td>0.4610</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.746</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1430</td>\n",
       "      <td>0.032200</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.3580</td>\n",
       "      <td>0.7150</td>\n",
       "      <td>87.917</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4qPNDBW1i3p13qLCt0Ki3A</td>\n",
       "      <td>Ben Woodward</td>\n",
       "      <td>Ghost (Acoustic)</td>\n",
       "      <td>Ghost - Acoustic</td>\n",
       "      <td>55</td>\n",
       "      <td>149610</td>\n",
       "      <td>False</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.1660</td>\n",
       "      <td>1</td>\n",
       "      <td>-17.235</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0763</td>\n",
       "      <td>0.924000</td>\n",
       "      <td>0.000006</td>\n",
       "      <td>0.1010</td>\n",
       "      <td>0.2670</td>\n",
       "      <td>77.489</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1iJBSr7s7jYXzM8EGcbK5b</td>\n",
       "      <td>Ingrid Michaelson;ZAYN</td>\n",
       "      <td>To Begin Again</td>\n",
       "      <td>To Begin Again</td>\n",
       "      <td>57</td>\n",
       "      <td>210826</td>\n",
       "      <td>False</td>\n",
       "      <td>0.438</td>\n",
       "      <td>0.3590</td>\n",
       "      <td>0</td>\n",
       "      <td>-9.734</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0557</td>\n",
       "      <td>0.210000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1170</td>\n",
       "      <td>0.1200</td>\n",
       "      <td>76.332</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6lfxq3CG4xtTiEg7opyCyx</td>\n",
       "      <td>Kina Grannis</td>\n",
       "      <td>Crazy Rich Asians (Original Motion Picture Sou...</td>\n",
       "      <td>Can't Help Falling In Love</td>\n",
       "      <td>71</td>\n",
       "      <td>201933</td>\n",
       "      <td>False</td>\n",
       "      <td>0.266</td>\n",
       "      <td>0.0596</td>\n",
       "      <td>0</td>\n",
       "      <td>-18.515</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0363</td>\n",
       "      <td>0.905000</td>\n",
       "      <td>0.000071</td>\n",
       "      <td>0.1320</td>\n",
       "      <td>0.1430</td>\n",
       "      <td>181.740</td>\n",
       "      <td>3</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5vjLSffimiIP26QG5WcN2K</td>\n",
       "      <td>Chord Overstreet</td>\n",
       "      <td>Hold On</td>\n",
       "      <td>Hold On</td>\n",
       "      <td>82</td>\n",
       "      <td>198853</td>\n",
       "      <td>False</td>\n",
       "      <td>0.618</td>\n",
       "      <td>0.4430</td>\n",
       "      <td>2</td>\n",
       "      <td>-9.681</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0526</td>\n",
       "      <td>0.469000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0829</td>\n",
       "      <td>0.1670</td>\n",
       "      <td>119.949</td>\n",
       "      <td>4</td>\n",
       "      <td>acoustic</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109995</th>\n",
       "      <td>1910z5NqrGoJ8SuKWNu19D</td>\n",
       "      <td>Scooter</td>\n",
       "      <td>I Want You to Stream!</td>\n",
       "      <td>Bora Bora Bora - Live</td>\n",
       "      <td>25</td>\n",
       "      <td>230250</td>\n",
       "      <td>False</td>\n",
       "      <td>0.726</td>\n",
       "      <td>0.8750</td>\n",
       "      <td>9</td>\n",
       "      <td>-5.957</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1930</td>\n",
       "      <td>0.203000</td>\n",
       "      <td>0.001510</td>\n",
       "      <td>0.5680</td>\n",
       "      <td>0.5230</td>\n",
       "      <td>139.955</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109996</th>\n",
       "      <td>2MgcPgxFvAlJCVITsEghCI</td>\n",
       "      <td>Ruffneck;Yavahn;Sharam Jey;Kolombo</td>\n",
       "      <td>Everybody Be Somebody: All The Classics And...</td>\n",
       "      <td>Everybody Be Somebody - Sharam Jey, Kolombo Remix</td>\n",
       "      <td>24</td>\n",
       "      <td>252524</td>\n",
       "      <td>False</td>\n",
       "      <td>0.875</td>\n",
       "      <td>0.5110</td>\n",
       "      <td>6</td>\n",
       "      <td>-6.677</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0474</td>\n",
       "      <td>0.204000</td>\n",
       "      <td>0.044500</td>\n",
       "      <td>0.1390</td>\n",
       "      <td>0.5870</td>\n",
       "      <td>122.169</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109997</th>\n",
       "      <td>3Rn21K5Te3TUM0AcFtisuX</td>\n",
       "      <td>Marshall Masters</td>\n",
       "      <td>Thunderdome Die Hard II (Digital Version)</td>\n",
       "      <td>Return To Zero - The Mystery Land Anthem</td>\n",
       "      <td>25</td>\n",
       "      <td>120110</td>\n",
       "      <td>False</td>\n",
       "      <td>0.679</td>\n",
       "      <td>0.8660</td>\n",
       "      <td>8</td>\n",
       "      <td>-9.691</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0719</td>\n",
       "      <td>0.000038</td>\n",
       "      <td>0.755000</td>\n",
       "      <td>0.9560</td>\n",
       "      <td>0.0457</td>\n",
       "      <td>147.086</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109998</th>\n",
       "      <td>3P5xhGZ3c9tOmyvpiTAvVn</td>\n",
       "      <td>Paul Elstak</td>\n",
       "      <td>b2s Presents Paul Elstak</td>\n",
       "      <td>The Dj’s Pumping - Freestyle Edit</td>\n",
       "      <td>24</td>\n",
       "      <td>179175</td>\n",
       "      <td>False</td>\n",
       "      <td>0.602</td>\n",
       "      <td>0.9330</td>\n",
       "      <td>10</td>\n",
       "      <td>-4.886</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0471</td>\n",
       "      <td>0.001720</td>\n",
       "      <td>0.032500</td>\n",
       "      <td>0.3720</td>\n",
       "      <td>0.5190</td>\n",
       "      <td>150.047</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109999</th>\n",
       "      <td>56QcaKO4AdCvmXgPSiXHSO</td>\n",
       "      <td>Tommyknocker;Sunbeam</td>\n",
       "      <td>The Viper - Nothing To Lose</td>\n",
       "      <td>Twisted World - The Viper Mashup mix - Edit Ve...</td>\n",
       "      <td>25</td>\n",
       "      <td>202116</td>\n",
       "      <td>False</td>\n",
       "      <td>0.490</td>\n",
       "      <td>0.9650</td>\n",
       "      <td>1</td>\n",
       "      <td>-4.186</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3920</td>\n",
       "      <td>0.068700</td>\n",
       "      <td>0.172000</td>\n",
       "      <td>0.2410</td>\n",
       "      <td>0.2740</td>\n",
       "      <td>158.084</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>33000 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      track_id                             artists  \\\n",
       "0       5SuOikwiRyPMVoIQDJUgSV                         Gen Hoshino   \n",
       "1       4qPNDBW1i3p13qLCt0Ki3A                        Ben Woodward   \n",
       "2       1iJBSr7s7jYXzM8EGcbK5b              Ingrid Michaelson;ZAYN   \n",
       "3       6lfxq3CG4xtTiEg7opyCyx                        Kina Grannis   \n",
       "4       5vjLSffimiIP26QG5WcN2K                    Chord Overstreet   \n",
       "...                        ...                                 ...   \n",
       "109995  1910z5NqrGoJ8SuKWNu19D                             Scooter   \n",
       "109996  2MgcPgxFvAlJCVITsEghCI  Ruffneck;Yavahn;Sharam Jey;Kolombo   \n",
       "109997  3Rn21K5Te3TUM0AcFtisuX                    Marshall Masters   \n",
       "109998  3P5xhGZ3c9tOmyvpiTAvVn                         Paul Elstak   \n",
       "109999  56QcaKO4AdCvmXgPSiXHSO                Tommyknocker;Sunbeam   \n",
       "\n",
       "                                               album_name  \\\n",
       "0                                                  Comedy   \n",
       "1                                        Ghost (Acoustic)   \n",
       "2                                          To Begin Again   \n",
       "3       Crazy Rich Asians (Original Motion Picture Sou...   \n",
       "4                                                 Hold On   \n",
       "...                                                   ...   \n",
       "109995                              I Want You to Stream!   \n",
       "109996     Everybody Be Somebody: All The Classics And...   \n",
       "109997          Thunderdome Die Hard II (Digital Version)   \n",
       "109998                           b2s Presents Paul Elstak   \n",
       "109999                        The Viper - Nothing To Lose   \n",
       "\n",
       "                                               track_name  popularity  \\\n",
       "0                                                  Comedy          73   \n",
       "1                                        Ghost - Acoustic          55   \n",
       "2                                          To Begin Again          57   \n",
       "3                              Can't Help Falling In Love          71   \n",
       "4                                                 Hold On          82   \n",
       "...                                                   ...         ...   \n",
       "109995                              Bora Bora Bora - Live          25   \n",
       "109996  Everybody Be Somebody - Sharam Jey, Kolombo Remix          24   \n",
       "109997           Return To Zero - The Mystery Land Anthem          25   \n",
       "109998                  The Dj’s Pumping - Freestyle Edit          24   \n",
       "109999  Twisted World - The Viper Mashup mix - Edit Ve...          25   \n",
       "\n",
       "        duration_ms  explicit  danceability  energy  key  loudness  mode  \\\n",
       "0            230666     False         0.676  0.4610    1    -6.746     0   \n",
       "1            149610     False         0.420  0.1660    1   -17.235     1   \n",
       "2            210826     False         0.438  0.3590    0    -9.734     1   \n",
       "3            201933     False         0.266  0.0596    0   -18.515     1   \n",
       "4            198853     False         0.618  0.4430    2    -9.681     1   \n",
       "...             ...       ...           ...     ...  ...       ...   ...   \n",
       "109995       230250     False         0.726  0.8750    9    -5.957     0   \n",
       "109996       252524     False         0.875  0.5110    6    -6.677     0   \n",
       "109997       120110     False         0.679  0.8660    8    -9.691     1   \n",
       "109998       179175     False         0.602  0.9330   10    -4.886     1   \n",
       "109999       202116     False         0.490  0.9650    1    -4.186     0   \n",
       "\n",
       "        speechiness  acousticness  instrumentalness  liveness  valence  \\\n",
       "0            0.1430      0.032200          0.000001    0.3580   0.7150   \n",
       "1            0.0763      0.924000          0.000006    0.1010   0.2670   \n",
       "2            0.0557      0.210000          0.000000    0.1170   0.1200   \n",
       "3            0.0363      0.905000          0.000071    0.1320   0.1430   \n",
       "4            0.0526      0.469000          0.000000    0.0829   0.1670   \n",
       "...             ...           ...               ...       ...      ...   \n",
       "109995       0.1930      0.203000          0.001510    0.5680   0.5230   \n",
       "109996       0.0474      0.204000          0.044500    0.1390   0.5870   \n",
       "109997       0.0719      0.000038          0.755000    0.9560   0.0457   \n",
       "109998       0.0471      0.001720          0.032500    0.3720   0.5190   \n",
       "109999       0.3920      0.068700          0.172000    0.2410   0.2740   \n",
       "\n",
       "          tempo  time_signature track_genre  \n",
       "0        87.917               4    acoustic  \n",
       "1        77.489               4    acoustic  \n",
       "2        76.332               4    acoustic  \n",
       "3       181.740               3    acoustic  \n",
       "4       119.949               4    acoustic  \n",
       "...         ...             ...         ...  \n",
       "109995  139.955               4      techno  \n",
       "109996  122.169               4      techno  \n",
       "109997  147.086               4      techno  \n",
       "109998  150.047               4      techno  \n",
       "109999  158.084               4      techno  \n",
       "\n",
       "[33000 rows x 20 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_selected"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "selected_genres = df_selected[df_selected['track_genre'].isin(genres_list)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>track_id</th>\n",
       "      <th>artists</th>\n",
       "      <th>album_name</th>\n",
       "      <th>track_name</th>\n",
       "      <th>popularity</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>explicit</th>\n",
       "      <th>danceability</th>\n",
       "      <th>energy</th>\n",
       "      <th>key</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>track_genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>25000</th>\n",
       "      <td>2grjqo0Frpf2okIBiifQKs</td>\n",
       "      <td>Earth, Wind &amp; Fire</td>\n",
       "      <td>The Best Of Earth, Wind &amp; Fire Vol. 1</td>\n",
       "      <td>September</td>\n",
       "      <td>83</td>\n",
       "      <td>215093</td>\n",
       "      <td>False</td>\n",
       "      <td>0.697</td>\n",
       "      <td>0.832</td>\n",
       "      <td>9</td>\n",
       "      <td>-7.264</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0298</td>\n",
       "      <td>0.168000</td>\n",
       "      <td>0.00131</td>\n",
       "      <td>0.2690</td>\n",
       "      <td>0.9790</td>\n",
       "      <td>125.926</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25001</th>\n",
       "      <td>49X0LAl6faAusYq02PRAY6</td>\n",
       "      <td>Modjo</td>\n",
       "      <td>Modjo (Remastered)</td>\n",
       "      <td>Lady - Hear Me Tonight</td>\n",
       "      <td>78</td>\n",
       "      <td>307153</td>\n",
       "      <td>False</td>\n",
       "      <td>0.720</td>\n",
       "      <td>0.808</td>\n",
       "      <td>6</td>\n",
       "      <td>-5.627</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0379</td>\n",
       "      <td>0.007930</td>\n",
       "      <td>0.02930</td>\n",
       "      <td>0.0634</td>\n",
       "      <td>0.8690</td>\n",
       "      <td>126.041</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25002</th>\n",
       "      <td>5lWSa1rmuSL6OBPOnkAqoa</td>\n",
       "      <td>Boney M.</td>\n",
       "      <td>Daddy Cool</td>\n",
       "      <td>Rasputin</td>\n",
       "      <td>70</td>\n",
       "      <td>220666</td>\n",
       "      <td>False</td>\n",
       "      <td>0.690</td>\n",
       "      <td>0.752</td>\n",
       "      <td>6</td>\n",
       "      <td>-11.470</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0455</td>\n",
       "      <td>0.463000</td>\n",
       "      <td>0.00102</td>\n",
       "      <td>0.5950</td>\n",
       "      <td>0.9700</td>\n",
       "      <td>126.005</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25003</th>\n",
       "      <td>0vB4Vd6PtkJSEnWsmqATnZ</td>\n",
       "      <td>George Benson</td>\n",
       "      <td>20/20</td>\n",
       "      <td>Nothing's Gonna Change My Love for You</td>\n",
       "      <td>71</td>\n",
       "      <td>242678</td>\n",
       "      <td>False</td>\n",
       "      <td>0.553</td>\n",
       "      <td>0.614</td>\n",
       "      <td>1</td>\n",
       "      <td>-5.098</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0306</td>\n",
       "      <td>0.764000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0811</td>\n",
       "      <td>0.3450</td>\n",
       "      <td>136.628</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25004</th>\n",
       "      <td>1MiEJdIwAK4zfwwQ2DKsvP</td>\n",
       "      <td>Akcent</td>\n",
       "      <td>That's My Name</td>\n",
       "      <td>That's My Name</td>\n",
       "      <td>42</td>\n",
       "      <td>248236</td>\n",
       "      <td>False</td>\n",
       "      <td>0.751</td>\n",
       "      <td>0.636</td>\n",
       "      <td>1</td>\n",
       "      <td>-4.791</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0437</td>\n",
       "      <td>0.047900</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.3540</td>\n",
       "      <td>0.5350</td>\n",
       "      <td>127.953</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109995</th>\n",
       "      <td>1910z5NqrGoJ8SuKWNu19D</td>\n",
       "      <td>Scooter</td>\n",
       "      <td>I Want You to Stream!</td>\n",
       "      <td>Bora Bora Bora - Live</td>\n",
       "      <td>25</td>\n",
       "      <td>230250</td>\n",
       "      <td>False</td>\n",
       "      <td>0.726</td>\n",
       "      <td>0.875</td>\n",
       "      <td>9</td>\n",
       "      <td>-5.957</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1930</td>\n",
       "      <td>0.203000</td>\n",
       "      <td>0.00151</td>\n",
       "      <td>0.5680</td>\n",
       "      <td>0.5230</td>\n",
       "      <td>139.955</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109996</th>\n",
       "      <td>2MgcPgxFvAlJCVITsEghCI</td>\n",
       "      <td>Ruffneck;Yavahn;Sharam Jey;Kolombo</td>\n",
       "      <td>Everybody Be Somebody: All The Classics And...</td>\n",
       "      <td>Everybody Be Somebody - Sharam Jey, Kolombo Remix</td>\n",
       "      <td>24</td>\n",
       "      <td>252524</td>\n",
       "      <td>False</td>\n",
       "      <td>0.875</td>\n",
       "      <td>0.511</td>\n",
       "      <td>6</td>\n",
       "      <td>-6.677</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0474</td>\n",
       "      <td>0.204000</td>\n",
       "      <td>0.04450</td>\n",
       "      <td>0.1390</td>\n",
       "      <td>0.5870</td>\n",
       "      <td>122.169</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109997</th>\n",
       "      <td>3Rn21K5Te3TUM0AcFtisuX</td>\n",
       "      <td>Marshall Masters</td>\n",
       "      <td>Thunderdome Die Hard II (Digital Version)</td>\n",
       "      <td>Return To Zero - The Mystery Land Anthem</td>\n",
       "      <td>25</td>\n",
       "      <td>120110</td>\n",
       "      <td>False</td>\n",
       "      <td>0.679</td>\n",
       "      <td>0.866</td>\n",
       "      <td>8</td>\n",
       "      <td>-9.691</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0719</td>\n",
       "      <td>0.000038</td>\n",
       "      <td>0.75500</td>\n",
       "      <td>0.9560</td>\n",
       "      <td>0.0457</td>\n",
       "      <td>147.086</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109998</th>\n",
       "      <td>3P5xhGZ3c9tOmyvpiTAvVn</td>\n",
       "      <td>Paul Elstak</td>\n",
       "      <td>b2s Presents Paul Elstak</td>\n",
       "      <td>The Dj’s Pumping - Freestyle Edit</td>\n",
       "      <td>24</td>\n",
       "      <td>179175</td>\n",
       "      <td>False</td>\n",
       "      <td>0.602</td>\n",
       "      <td>0.933</td>\n",
       "      <td>10</td>\n",
       "      <td>-4.886</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0471</td>\n",
       "      <td>0.001720</td>\n",
       "      <td>0.03250</td>\n",
       "      <td>0.3720</td>\n",
       "      <td>0.5190</td>\n",
       "      <td>150.047</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109999</th>\n",
       "      <td>56QcaKO4AdCvmXgPSiXHSO</td>\n",
       "      <td>Tommyknocker;Sunbeam</td>\n",
       "      <td>The Viper - Nothing To Lose</td>\n",
       "      <td>Twisted World - The Viper Mashup mix - Edit Ve...</td>\n",
       "      <td>25</td>\n",
       "      <td>202116</td>\n",
       "      <td>False</td>\n",
       "      <td>0.490</td>\n",
       "      <td>0.965</td>\n",
       "      <td>1</td>\n",
       "      <td>-4.186</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3920</td>\n",
       "      <td>0.068700</td>\n",
       "      <td>0.17200</td>\n",
       "      <td>0.2410</td>\n",
       "      <td>0.2740</td>\n",
       "      <td>158.084</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6000 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      track_id                             artists  \\\n",
       "25000   2grjqo0Frpf2okIBiifQKs                  Earth, Wind & Fire   \n",
       "25001   49X0LAl6faAusYq02PRAY6                               Modjo   \n",
       "25002   5lWSa1rmuSL6OBPOnkAqoa                            Boney M.   \n",
       "25003   0vB4Vd6PtkJSEnWsmqATnZ                       George Benson   \n",
       "25004   1MiEJdIwAK4zfwwQ2DKsvP                              Akcent   \n",
       "...                        ...                                 ...   \n",
       "109995  1910z5NqrGoJ8SuKWNu19D                             Scooter   \n",
       "109996  2MgcPgxFvAlJCVITsEghCI  Ruffneck;Yavahn;Sharam Jey;Kolombo   \n",
       "109997  3Rn21K5Te3TUM0AcFtisuX                    Marshall Masters   \n",
       "109998  3P5xhGZ3c9tOmyvpiTAvVn                         Paul Elstak   \n",
       "109999  56QcaKO4AdCvmXgPSiXHSO                Tommyknocker;Sunbeam   \n",
       "\n",
       "                                            album_name  \\\n",
       "25000            The Best Of Earth, Wind & Fire Vol. 1   \n",
       "25001                               Modjo (Remastered)   \n",
       "25002                                       Daddy Cool   \n",
       "25003                                            20/20   \n",
       "25004                                   That's My Name   \n",
       "...                                                ...   \n",
       "109995                           I Want You to Stream!   \n",
       "109996  Everybody Be Somebody: All The Classics And...   \n",
       "109997       Thunderdome Die Hard II (Digital Version)   \n",
       "109998                        b2s Presents Paul Elstak   \n",
       "109999                     The Viper - Nothing To Lose   \n",
       "\n",
       "                                               track_name  popularity  \\\n",
       "25000                                           September          83   \n",
       "25001                              Lady - Hear Me Tonight          78   \n",
       "25002                                            Rasputin          70   \n",
       "25003              Nothing's Gonna Change My Love for You          71   \n",
       "25004                                      That's My Name          42   \n",
       "...                                                   ...         ...   \n",
       "109995                              Bora Bora Bora - Live          25   \n",
       "109996  Everybody Be Somebody - Sharam Jey, Kolombo Remix          24   \n",
       "109997           Return To Zero - The Mystery Land Anthem          25   \n",
       "109998                  The Dj’s Pumping - Freestyle Edit          24   \n",
       "109999  Twisted World - The Viper Mashup mix - Edit Ve...          25   \n",
       "\n",
       "        duration_ms  explicit  danceability  energy  key  loudness  mode  \\\n",
       "25000        215093     False         0.697   0.832    9    -7.264     1   \n",
       "25001        307153     False         0.720   0.808    6    -5.627     1   \n",
       "25002        220666     False         0.690   0.752    6   -11.470     0   \n",
       "25003        242678     False         0.553   0.614    1    -5.098     1   \n",
       "25004        248236     False         0.751   0.636    1    -4.791     0   \n",
       "...             ...       ...           ...     ...  ...       ...   ...   \n",
       "109995       230250     False         0.726   0.875    9    -5.957     0   \n",
       "109996       252524     False         0.875   0.511    6    -6.677     0   \n",
       "109997       120110     False         0.679   0.866    8    -9.691     1   \n",
       "109998       179175     False         0.602   0.933   10    -4.886     1   \n",
       "109999       202116     False         0.490   0.965    1    -4.186     0   \n",
       "\n",
       "        speechiness  acousticness  instrumentalness  liveness  valence  \\\n",
       "25000        0.0298      0.168000           0.00131    0.2690   0.9790   \n",
       "25001        0.0379      0.007930           0.02930    0.0634   0.8690   \n",
       "25002        0.0455      0.463000           0.00102    0.5950   0.9700   \n",
       "25003        0.0306      0.764000           0.00000    0.0811   0.3450   \n",
       "25004        0.0437      0.047900           0.00000    0.3540   0.5350   \n",
       "...             ...           ...               ...       ...      ...   \n",
       "109995       0.1930      0.203000           0.00151    0.5680   0.5230   \n",
       "109996       0.0474      0.204000           0.04450    0.1390   0.5870   \n",
       "109997       0.0719      0.000038           0.75500    0.9560   0.0457   \n",
       "109998       0.0471      0.001720           0.03250    0.3720   0.5190   \n",
       "109999       0.3920      0.068700           0.17200    0.2410   0.2740   \n",
       "\n",
       "          tempo  time_signature track_genre  \n",
       "25000   125.926               4       disco  \n",
       "25001   126.041               4       disco  \n",
       "25002   126.005               4       disco  \n",
       "25003   136.628               4       disco  \n",
       "25004   127.953               4       disco  \n",
       "...         ...             ...         ...  \n",
       "109995  139.955               4      techno  \n",
       "109996  122.169               4      techno  \n",
       "109997  147.086               4      techno  \n",
       "109998  150.047               4      techno  \n",
       "109999  158.084               4      techno  \n",
       "\n",
       "[6000 rows x 20 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selected_genres"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "music_data = selected_genres\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>track_id</th>\n",
       "      <th>artists</th>\n",
       "      <th>album_name</th>\n",
       "      <th>track_name</th>\n",
       "      <th>popularity</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>explicit</th>\n",
       "      <th>danceability</th>\n",
       "      <th>energy</th>\n",
       "      <th>key</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>track_genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>25000</th>\n",
       "      <td>2grjqo0Frpf2okIBiifQKs</td>\n",
       "      <td>Earth, Wind &amp; Fire</td>\n",
       "      <td>The Best Of Earth, Wind &amp; Fire Vol. 1</td>\n",
       "      <td>September</td>\n",
       "      <td>83</td>\n",
       "      <td>215093</td>\n",
       "      <td>False</td>\n",
       "      <td>0.697</td>\n",
       "      <td>0.832</td>\n",
       "      <td>9</td>\n",
       "      <td>-7.264</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0298</td>\n",
       "      <td>0.168000</td>\n",
       "      <td>0.00131</td>\n",
       "      <td>0.2690</td>\n",
       "      <td>0.9790</td>\n",
       "      <td>125.926</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25001</th>\n",
       "      <td>49X0LAl6faAusYq02PRAY6</td>\n",
       "      <td>Modjo</td>\n",
       "      <td>Modjo (Remastered)</td>\n",
       "      <td>Lady - Hear Me Tonight</td>\n",
       "      <td>78</td>\n",
       "      <td>307153</td>\n",
       "      <td>False</td>\n",
       "      <td>0.720</td>\n",
       "      <td>0.808</td>\n",
       "      <td>6</td>\n",
       "      <td>-5.627</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0379</td>\n",
       "      <td>0.007930</td>\n",
       "      <td>0.02930</td>\n",
       "      <td>0.0634</td>\n",
       "      <td>0.8690</td>\n",
       "      <td>126.041</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25002</th>\n",
       "      <td>5lWSa1rmuSL6OBPOnkAqoa</td>\n",
       "      <td>Boney M.</td>\n",
       "      <td>Daddy Cool</td>\n",
       "      <td>Rasputin</td>\n",
       "      <td>70</td>\n",
       "      <td>220666</td>\n",
       "      <td>False</td>\n",
       "      <td>0.690</td>\n",
       "      <td>0.752</td>\n",
       "      <td>6</td>\n",
       "      <td>-11.470</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0455</td>\n",
       "      <td>0.463000</td>\n",
       "      <td>0.00102</td>\n",
       "      <td>0.5950</td>\n",
       "      <td>0.9700</td>\n",
       "      <td>126.005</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25003</th>\n",
       "      <td>0vB4Vd6PtkJSEnWsmqATnZ</td>\n",
       "      <td>George Benson</td>\n",
       "      <td>20/20</td>\n",
       "      <td>Nothing's Gonna Change My Love for You</td>\n",
       "      <td>71</td>\n",
       "      <td>242678</td>\n",
       "      <td>False</td>\n",
       "      <td>0.553</td>\n",
       "      <td>0.614</td>\n",
       "      <td>1</td>\n",
       "      <td>-5.098</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0306</td>\n",
       "      <td>0.764000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0811</td>\n",
       "      <td>0.3450</td>\n",
       "      <td>136.628</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25004</th>\n",
       "      <td>1MiEJdIwAK4zfwwQ2DKsvP</td>\n",
       "      <td>Akcent</td>\n",
       "      <td>That's My Name</td>\n",
       "      <td>That's My Name</td>\n",
       "      <td>42</td>\n",
       "      <td>248236</td>\n",
       "      <td>False</td>\n",
       "      <td>0.751</td>\n",
       "      <td>0.636</td>\n",
       "      <td>1</td>\n",
       "      <td>-4.791</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0437</td>\n",
       "      <td>0.047900</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.3540</td>\n",
       "      <td>0.5350</td>\n",
       "      <td>127.953</td>\n",
       "      <td>4</td>\n",
       "      <td>disco</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109995</th>\n",
       "      <td>1910z5NqrGoJ8SuKWNu19D</td>\n",
       "      <td>Scooter</td>\n",
       "      <td>I Want You to Stream!</td>\n",
       "      <td>Bora Bora Bora - Live</td>\n",
       "      <td>25</td>\n",
       "      <td>230250</td>\n",
       "      <td>False</td>\n",
       "      <td>0.726</td>\n",
       "      <td>0.875</td>\n",
       "      <td>9</td>\n",
       "      <td>-5.957</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1930</td>\n",
       "      <td>0.203000</td>\n",
       "      <td>0.00151</td>\n",
       "      <td>0.5680</td>\n",
       "      <td>0.5230</td>\n",
       "      <td>139.955</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109996</th>\n",
       "      <td>2MgcPgxFvAlJCVITsEghCI</td>\n",
       "      <td>Ruffneck;Yavahn;Sharam Jey;Kolombo</td>\n",
       "      <td>Everybody Be Somebody: All The Classics And...</td>\n",
       "      <td>Everybody Be Somebody - Sharam Jey, Kolombo Remix</td>\n",
       "      <td>24</td>\n",
       "      <td>252524</td>\n",
       "      <td>False</td>\n",
       "      <td>0.875</td>\n",
       "      <td>0.511</td>\n",
       "      <td>6</td>\n",
       "      <td>-6.677</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0474</td>\n",
       "      <td>0.204000</td>\n",
       "      <td>0.04450</td>\n",
       "      <td>0.1390</td>\n",
       "      <td>0.5870</td>\n",
       "      <td>122.169</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109997</th>\n",
       "      <td>3Rn21K5Te3TUM0AcFtisuX</td>\n",
       "      <td>Marshall Masters</td>\n",
       "      <td>Thunderdome Die Hard II (Digital Version)</td>\n",
       "      <td>Return To Zero - The Mystery Land Anthem</td>\n",
       "      <td>25</td>\n",
       "      <td>120110</td>\n",
       "      <td>False</td>\n",
       "      <td>0.679</td>\n",
       "      <td>0.866</td>\n",
       "      <td>8</td>\n",
       "      <td>-9.691</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0719</td>\n",
       "      <td>0.000038</td>\n",
       "      <td>0.75500</td>\n",
       "      <td>0.9560</td>\n",
       "      <td>0.0457</td>\n",
       "      <td>147.086</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109998</th>\n",
       "      <td>3P5xhGZ3c9tOmyvpiTAvVn</td>\n",
       "      <td>Paul Elstak</td>\n",
       "      <td>b2s Presents Paul Elstak</td>\n",
       "      <td>The Dj’s Pumping - Freestyle Edit</td>\n",
       "      <td>24</td>\n",
       "      <td>179175</td>\n",
       "      <td>False</td>\n",
       "      <td>0.602</td>\n",
       "      <td>0.933</td>\n",
       "      <td>10</td>\n",
       "      <td>-4.886</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0471</td>\n",
       "      <td>0.001720</td>\n",
       "      <td>0.03250</td>\n",
       "      <td>0.3720</td>\n",
       "      <td>0.5190</td>\n",
       "      <td>150.047</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109999</th>\n",
       "      <td>56QcaKO4AdCvmXgPSiXHSO</td>\n",
       "      <td>Tommyknocker;Sunbeam</td>\n",
       "      <td>The Viper - Nothing To Lose</td>\n",
       "      <td>Twisted World - The Viper Mashup mix - Edit Ve...</td>\n",
       "      <td>25</td>\n",
       "      <td>202116</td>\n",
       "      <td>False</td>\n",
       "      <td>0.490</td>\n",
       "      <td>0.965</td>\n",
       "      <td>1</td>\n",
       "      <td>-4.186</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3920</td>\n",
       "      <td>0.068700</td>\n",
       "      <td>0.17200</td>\n",
       "      <td>0.2410</td>\n",
       "      <td>0.2740</td>\n",
       "      <td>158.084</td>\n",
       "      <td>4</td>\n",
       "      <td>techno</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6000 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      track_id                             artists  \\\n",
       "25000   2grjqo0Frpf2okIBiifQKs                  Earth, Wind & Fire   \n",
       "25001   49X0LAl6faAusYq02PRAY6                               Modjo   \n",
       "25002   5lWSa1rmuSL6OBPOnkAqoa                            Boney M.   \n",
       "25003   0vB4Vd6PtkJSEnWsmqATnZ                       George Benson   \n",
       "25004   1MiEJdIwAK4zfwwQ2DKsvP                              Akcent   \n",
       "...                        ...                                 ...   \n",
       "109995  1910z5NqrGoJ8SuKWNu19D                             Scooter   \n",
       "109996  2MgcPgxFvAlJCVITsEghCI  Ruffneck;Yavahn;Sharam Jey;Kolombo   \n",
       "109997  3Rn21K5Te3TUM0AcFtisuX                    Marshall Masters   \n",
       "109998  3P5xhGZ3c9tOmyvpiTAvVn                         Paul Elstak   \n",
       "109999  56QcaKO4AdCvmXgPSiXHSO                Tommyknocker;Sunbeam   \n",
       "\n",
       "                                            album_name  \\\n",
       "25000            The Best Of Earth, Wind & Fire Vol. 1   \n",
       "25001                               Modjo (Remastered)   \n",
       "25002                                       Daddy Cool   \n",
       "25003                                            20/20   \n",
       "25004                                   That's My Name   \n",
       "...                                                ...   \n",
       "109995                           I Want You to Stream!   \n",
       "109996  Everybody Be Somebody: All The Classics And...   \n",
       "109997       Thunderdome Die Hard II (Digital Version)   \n",
       "109998                        b2s Presents Paul Elstak   \n",
       "109999                     The Viper - Nothing To Lose   \n",
       "\n",
       "                                               track_name  popularity  \\\n",
       "25000                                           September          83   \n",
       "25001                              Lady - Hear Me Tonight          78   \n",
       "25002                                            Rasputin          70   \n",
       "25003              Nothing's Gonna Change My Love for You          71   \n",
       "25004                                      That's My Name          42   \n",
       "...                                                   ...         ...   \n",
       "109995                              Bora Bora Bora - Live          25   \n",
       "109996  Everybody Be Somebody - Sharam Jey, Kolombo Remix          24   \n",
       "109997           Return To Zero - The Mystery Land Anthem          25   \n",
       "109998                  The Dj’s Pumping - Freestyle Edit          24   \n",
       "109999  Twisted World - The Viper Mashup mix - Edit Ve...          25   \n",
       "\n",
       "        duration_ms  explicit  danceability  energy  key  loudness  mode  \\\n",
       "25000        215093     False         0.697   0.832    9    -7.264     1   \n",
       "25001        307153     False         0.720   0.808    6    -5.627     1   \n",
       "25002        220666     False         0.690   0.752    6   -11.470     0   \n",
       "25003        242678     False         0.553   0.614    1    -5.098     1   \n",
       "25004        248236     False         0.751   0.636    1    -4.791     0   \n",
       "...             ...       ...           ...     ...  ...       ...   ...   \n",
       "109995       230250     False         0.726   0.875    9    -5.957     0   \n",
       "109996       252524     False         0.875   0.511    6    -6.677     0   \n",
       "109997       120110     False         0.679   0.866    8    -9.691     1   \n",
       "109998       179175     False         0.602   0.933   10    -4.886     1   \n",
       "109999       202116     False         0.490   0.965    1    -4.186     0   \n",
       "\n",
       "        speechiness  acousticness  instrumentalness  liveness  valence  \\\n",
       "25000        0.0298      0.168000           0.00131    0.2690   0.9790   \n",
       "25001        0.0379      0.007930           0.02930    0.0634   0.8690   \n",
       "25002        0.0455      0.463000           0.00102    0.5950   0.9700   \n",
       "25003        0.0306      0.764000           0.00000    0.0811   0.3450   \n",
       "25004        0.0437      0.047900           0.00000    0.3540   0.5350   \n",
       "...             ...           ...               ...       ...      ...   \n",
       "109995       0.1930      0.203000           0.00151    0.5680   0.5230   \n",
       "109996       0.0474      0.204000           0.04450    0.1390   0.5870   \n",
       "109997       0.0719      0.000038           0.75500    0.9560   0.0457   \n",
       "109998       0.0471      0.001720           0.03250    0.3720   0.5190   \n",
       "109999       0.3920      0.068700           0.17200    0.2410   0.2740   \n",
       "\n",
       "          tempo  time_signature track_genre  \n",
       "25000   125.926               4       disco  \n",
       "25001   126.041               4       disco  \n",
       "25002   126.005               4       disco  \n",
       "25003   136.628               4       disco  \n",
       "25004   127.953               4       disco  \n",
       "...         ...             ...         ...  \n",
       "109995  139.955               4      techno  \n",
       "109996  122.169               4      techno  \n",
       "109997  147.086               4      techno  \n",
       "109998  150.047               4      techno  \n",
       "109999  158.084               4      techno  \n",
       "\n",
       "[6000 rows x 20 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "music_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-26-c5e0f15120eb>:14: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  music_data.dropna(inplace=True)\n",
      "<ipython-input-26-c5e0f15120eb>:15: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  music_data.drop_duplicates(inplace=True)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree Classifier Accuracy: 0.4575\n",
      "Random Forest Classifier Accuracy: 0.5033\n",
      "Support Vector Classifier Accuracy: 0.3617\n",
      "K-Nearest Neighbors Classifier Accuracy: 0.4758\n"
     ]
    }
   ],
   "source": [
    "df_genres.head()\n",
    "genre_counts = df_genres['track_genre'].value_counts()\n",
    "num_genres_with_1000_rows = (genre_counts >= 1000).sum()\n",
    "genres_1000 = genre_counts[genre_counts >= 1000].index\n",
    "df_selected = df_genres[df_genres['track_genre'].isin(genres_1000)]\n",
    "\n",
    "\n",
    "genres_list = ['disco', 'electronic', 'industrial', 'techno', 'synth-pop', 'funk']\n",
    "\n",
    "selected_genres = df_selected[df_selected['track_genre'].isin(genres_list)]\n",
    "\n",
    "music_data = selected_genres\n",
    "music_data.dropna(inplace=True)\n",
    "music_data.drop_duplicates(inplace=True)\n",
    "\n",
    "\n",
    "features_set1 = ['popularity', 'acousticness', 'instrumentalness']\n",
    "\n",
    "\n",
    "X = music_data[features_set1]\n",
    "y = music_data['track_genre']\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Decision Tree Classifier\n",
    "dt_classifier = DecisionTreeClassifier()\n",
    "dt_classifier.fit(X_train, y_train)\n",
    "dt_predictions = dt_classifier.predict(X_test)\n",
    "dt_accuracy = accuracy_score(y_test, dt_predictions)\n",
    "print(f'Decision Tree Classifier Accuracy: {dt_accuracy:.4f}')\n",
    "\n",
    "# Random Forest Classifier\n",
    "rf_classifier = RandomForestClassifier()\n",
    "rf_classifier.fit(X_train, y_train)\n",
    "rf_predictions = rf_classifier.predict(X_test)\n",
    "rf_accuracy = accuracy_score(y_test, rf_predictions)\n",
    "print(f'Random Forest Classifier Accuracy: {rf_accuracy:.4f}')\n",
    "\n",
    "# Support Vector Classifier (SVC)\n",
    "svc_classifier = SVC()\n",
    "svc_classifier.fit(X_train, y_train)\n",
    "svc_predictions = svc_classifier.predict(X_test)\n",
    "svc_accuracy = accuracy_score(y_test, svc_predictions)\n",
    "print(f'Support Vector Classifier Accuracy: {svc_accuracy:.4f}')\n",
    "\n",
    "# K-Nearest Neighbors Classifier (KNN)\n",
    "knn_classifier = KNeighborsClassifier()\n",
    "knn_classifier.fit(X_train, y_train)\n",
    "knn_predictions = knn_classifier.predict(X_test)\n",
    "knn_accuracy = accuracy_score(y_test, knn_predictions)\n",
    "print(f'K-Nearest Neighbors Classifier Accuracy: {knn_accuracy:.4f}')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "raster_os",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
